{
	"cp-extension": {
		"prefix": ["cpp-cp"],
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"#define ll long long",
			"#define mod 1000000007",
			"#define endl '\\n'",
			"void solve()",
			"{",
				"\t$2",
			"}",
			"int main() {",
			"\tios_base::sync_with_stdio(false);",
			"\tcin.tie(NULL);",
			"\tint t;",
			"\tcin >> t;",
			"\twhile(t--)",
			"\t{\n\t\tsolve();\n\t}\n\treturn 0;\n}\n"
		],
		"description": "Default cpp code for CP"
	},
	"Header protection": {
		"prefix": ["ifndef"],
		"body": [
			"#ifndef ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H",
			"# define ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H",
			"",
			"$2",
			"",
			"#endif"
		],
		"description": "Header protection"
	},
	"Declaration: Cannonical form": {
		"prefix": ["DecCannon"],
		"body": [
			"#ifndef ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_HPP",
			"# define ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_HPP",
			"",
			"class ${TM_FILENAME_BASE} {",
			"public:",
			"	${TM_FILENAME_BASE}();",
			"	${TM_FILENAME_BASE}(const ${TM_FILENAME_BASE} &);",
			"	${TM_FILENAME_BASE} &operator=(const ${TM_FILENAME_BASE} &);",
			"	~${TM_FILENAME_BASE}();",
			"	$1",
			"private:",
			"	$2",
			"};",
			"",
			"#endif"
		],
		"description": "Declatration of Cannonical Form for 42 CPP modules"
	},

	"Implementation: Cannonical form" : {
		"prefix": ["ImpCannon"],
		"body": [
			"#include \"${TM_FILENAME_BASE}.hpp\"",
			"",
			"${TM_FILENAME_BASE}::${TM_FILENAME_BASE}()",
			"{",
			"	std::cout << \"${TM_FILENAME_BASE}: Default constructor called\" << std::endl;",
			"}",
			"",
			"${TM_FILENAME_BASE} &${TM_FILENAME_BASE}::operator=(const ${TM_FILENAME_BASE} &obj)",
			"{",
			"	std::cout << \"${TM_FILENAME_BASE}: Copy assignment operator called\" << std::endl;",
			"	if (this != &obj)",
			"	{",
			"		$1",
			"	}",
			"	return (*this);",
			"}",
			"",
			"${TM_FILENAME_BASE}::${TM_FILENAME_BASE}(${TM_FILENAME_BASE} const &obj)",
			"{",
			"	std::cout << \"${TM_FILENAME_BASE}: Copy constructor called\" << std::endl;",
			"	if (this != &obj)",
			"		*this = obj;",
			"}",
			"",
			"${TM_FILENAME_BASE}::~${TM_FILENAME_BASE}()",
			"{",
			"	std::cout << \"${TM_FILENAME_BASE}: Destructor called\" << std::endl;",
			"}",
			"$2"
		],
		"description": "Implementation: Cannonical Form for 42 CPP modules"
	}
}
